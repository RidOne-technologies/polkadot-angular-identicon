{"version":3,"sources":["../../../projects/polkadot-angular-identicon/src/lib/constants.ts","../../../projects/polkadot-angular-identicon/src/lib/render-helper.ts","../../../projects/polkadot-angular-identicon/src/lib/polkadot-angular-identicon.component.ts","../../../projects/polkadot-angular-identicon/src/lib/polkadot-angular-identicon.module.ts"],"names":["THEMES_ENUM","RenderHelper","pickRenderFunction","address","theme","size","this","renderEmptyIdenticon","POLKADOT","renderPolkadotIdenticon","BEACHBALL","renderBeachballIdenticon","JDENTICON","renderJidenticon","renderCircle","_a","key","cx","cy","fill","r","className","isAlternative","style","polkadotIcon","map","join","beachballIcon","innerHTML","jdenticon.toSvg","themeFilter","EMPTY","PolkadotIdentIconComponent","sanitizer","prototype","ngOnInit","iconHTML","bypassSecurityTrustHtml","getStyle","width","height","Component","args","selector","template","DomSanitizer","Input","NgModule","declarations","imports","CommonModule","BrowserModule","exports"],"mappings":"omBAAO,IAGKA,GAAZ,SAAYA,GACRA,EAAA,SAAA,WACAA,EAAA,UAAA,YACAA,EAAA,UAAA,YACAA,EAAA,MAAA,QAJJ,CAAYA,IAAAA,EAAW,KCGvB,IAAAC,EAAA,WAAA,SAAAA,YAGSA,EAAAC,mBAAP,SAA0BC,EAAiBC,EAAeC,GACxD,QADwD,IAAAA,IAAAA,EDThC,KCUpBF,EAeF,OAAOG,KAAKC,qBAAqBF,GAdjC,OAAQD,GACN,KAAKJ,EAAYQ,SACf,OAAOF,KAAKG,wBAAwBN,EAAS,IAAI,EAAOE,EAAM,IAEhE,KAAKL,EAAYU,UACf,OAAOJ,KAAKK,yBAAyBR,GAAS,EAAOE,GAEvD,KAAKL,EAAYY,UACf,OAAON,KAAKO,iBAAiBV,EAASE,GAExC,QACE,OAAOC,KAAKC,qBAAqBF,KASlCJ,EAAAa,aAAP,SAAoBC,EAA6BC,GAI/C,MAHU,+FADYD,EAAAE,GAEM,UAFFF,EAAAG,GAEc,WAFRH,EAAAI,KAEuB,SAFpBJ,EAAAK,EAE8B,gCAM5DnB,EAAAQ,wBAAP,SAA+BN,EAAiBkB,EAAgBC,EAAuBjB,EAAckB,GACnG,YAD8C,IAAAF,IAAAA,EAAA,SAAgB,IAAAC,IAAAA,GAAA,GACvD,4BACUjB,EAAI,wDAELA,EAAI,kBACVmB,EAAAA,aAAarB,EAAS,CAAEmB,cAAaA,IAAIG,IAAInB,KAAKQ,cAAcY,KAAK,IAAG,wBAO7EzB,EAAAU,yBAAP,SAAgCR,EAAiBmB,EAAuBjB,GAKtE,YAL+C,IAAAiB,IAAAA,GAAA,GAE7CK,EAAAA,cAAcxB,EACZ,CAAEmB,cAAeA,EAAejB,KAAIA,IAEVuB,WAIzB3B,EAAAM,qBAAP,SAA4BF,GAC1B,MAAO,4LAQFJ,EAAAY,iBAAP,SAAwBV,EAAiBE,GACvC,OAAOwB,EAAAA,MAAgB1B,EAASE,IAK3BJ,EAAA6B,YAAP,SAAmB1B,GACjB,OAAIA,IAAUJ,EAAYQ,UAAaJ,EAE5BA,IAAUJ,EAAYU,UACxBV,EAAYQ,SACVJ,IAAUJ,EAAYY,UACxBZ,EAAYY,UAEZZ,EAAY+B,MANZ/B,EAAYQ,YAvEzB,gBCQE,SAAAwB,EAAoBC,GAAA3B,KAAA2B,UAAAA,EAHX3B,KAAAD,KFXiB,GEYjBC,KAAAF,MAAiB,kBAG1B4B,EAAAE,UAAAC,SAAA,WACE7B,KAAK8B,SAAW9B,KAAK2B,UAAUI,wBAC7BpC,EAAaC,mBAAmBI,KAAKH,QAASG,KAAKF,MAAOE,KAAKD,QAGnE2B,EAAAE,UAAAI,SAAA,WACE,MAAO,CACLC,MAAOjC,KAAKD,KAAO,KACnBmC,OAAQlC,KAAKD,KAAO,gCAnBzBoC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,6BACVC,SAAU,yGALHC,EAAAA,iDASNC,EAAAA,oBACAA,EAAAA,qBACAA,EAAAA,eCFH,iCALCC,EAAAA,SAAQL,KAAA,CAAC,CACRM,aAAc,CAAChB,GACfiB,QAAS,CAACC,EAAAA,aAAcC,EAAAA,eACxBC,QAAS,CAACpB","sourcesContent":["export const DEFAULT_SIZE = 64;\nexport const DEFAULT_THEME= 'polkadot';\nexport const DEFAULT_ADDRESS = \"\"\nexport enum THEMES_ENUM {\n    POLKADOT= 'polkadot',\n    BEACHBALL= 'beachball',\n    JDENTICON = 'jdenticon',\n    EMPTY = 'empty'\n}","import { polkadotIcon, beachballIcon } from '@polkadot/ui-shared/icons';\nimport { Circle } from '@polkadot/ui-shared/icons/types';\nimport * as jdenticon from 'jdenticon';\n\nimport { DEFAULT_SIZE, THEMES_ENUM } from './constants';\n\nexport class RenderHelper {\n\n  /// Function that choose render function according to which parameters are passed\n  static pickRenderFunction(address: string, theme: string, size: number = DEFAULT_SIZE): string {\n    if (address) {\n      switch (theme) {\n        case THEMES_ENUM.POLKADOT:\n          return this.renderPolkadotIdenticon(address, '', false, size, '');\n\n        case THEMES_ENUM.BEACHBALL:\n          return this.renderBeachballIdenticon(address, false, size);\n\n        case THEMES_ENUM.JDENTICON:\n          return this.renderJidenticon(address, size);\n\n        default:\n          return this.renderEmptyIdenticon(size);\n      }\n    } else {\n      return this.renderEmptyIdenticon(size)\n    }\n\n  }\n\n  /// function called when the polkadot theme is passed. This function renders the circle with a color\n  static renderCircle({ cx, cy, fill, r }: Circle, key: number) {\n    let svg = `<svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n                <circle cx=\"${cx}\"  cy=\"${cy}\" fill=\"${fill}\"  r=\"${r}\" />\n                </svg>`;\n    return svg;\n  }\n\n  /// This function renders the polkadot identicon when the polkadot theme is passed\n  static renderPolkadotIdenticon(address: string, className = '', isAlternative = false, size: number, style: string) {\n    return `<svg\n            height=${size}\n            viewBox='0 0 64 64'\n            width=${size}>\n            ${polkadotIcon(address, { isAlternative }).map(this.renderCircle).join('')}\n            </svg>`;\n\n  }\n\n\n  /// This function renders the beachball identicon when the beachball theme is passed\n  static renderBeachballIdenticon(address: string, isAlternative = false, size: number): string {\n    let generatedBeachballIcon =\n      beachballIcon(address,\n        { isAlternative: isAlternative, size },\n      );\n    return generatedBeachballIcon.innerHTML;\n  }\n\n  /// This empty identicon will be diplayed if a wrong Substrate address is passed\n  static renderEmptyIdenticon(size: number): string {\n    return `<div>\n              <svg :height=\"size\" viewBox=\"0 0 64 64\" :width=\"size\" >\n                <circle cx=\"50%\" cy=\"50%\" fill=\"#eee\" r=\"50%\" />\n              </svg>\n            </div>`;\n  }\n\n  /// This function renders the jdenticon identicon when the jdenticon theme is passed\n  static renderJidenticon(address: string, size: number) {\n    return jdenticon.toSvg(address, size);\n  }\n\n  /// This helper function picks the theme according to the passed parameters\n  ///\n  static themeFilter(theme?: string): string {\n    if (theme === THEMES_ENUM.POLKADOT || !theme) {\n      return THEMES_ENUM.POLKADOT\n    } else if (theme === THEMES_ENUM.BEACHBALL) {\n      return THEMES_ENUM.POLKADOT\n    } else if (theme === THEMES_ENUM.JDENTICON) {\n      return THEMES_ENUM.JDENTICON\n    } else {\n      return THEMES_ENUM.EMPTY\n    }\n  }\n}","import { Component, Input, OnInit } from \"@angular/core\";\nimport { DomSanitizer, SafeHtml } from \"@angular/platform-browser\";\nimport { RenderHelper } from \"./render-helper\";\nimport { DEFAULT_SIZE } from \"./constants\";\n@Component({\n  selector: \"polkadot-angular-identicon\",\n  template: `<div [innerHTML]=\"iconHTML\" [ngStyle]=\"getStyle()\"></div>`,\n  styles: [],\n})\nexport class PolkadotIdentIconComponent implements OnInit {\n  @Input() address?: string;\n  @Input() size?: number = DEFAULT_SIZE;\n  @Input() theme?: string = \"polkadot\";\n  iconHTML?: SafeHtml;\n  constructor(private sanitizer: DomSanitizer) {}\n  ngOnInit(): void {\n    this.iconHTML = this.sanitizer.bypassSecurityTrustHtml(\n      RenderHelper.pickRenderFunction(this.address, this.theme, this.size)\n    );\n  }\n  getStyle() {\n    return {\n      width: this.size + \"px\",\n      height: this.size + \"px\",\n    };\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { PolkadotIdentIconComponent } from \"./polkadot-angular-identicon.component\";\n\n@NgModule({\n  declarations: [PolkadotIdentIconComponent],\n  imports: [CommonModule, BrowserModule],\n  exports: [PolkadotIdentIconComponent],\n})\nexport class PolkadotIdentIconModule {}\n"]}